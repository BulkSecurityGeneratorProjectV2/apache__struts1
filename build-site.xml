<project name="Struts" default="compile.website" basedir=".">

<!-- 
     A stopgap build file for compiling the website. 
     Invoke with: ant -f build-site.xml
-->

<!--
     The true builds for Struts 1.3.x will utilize Maven. 
     The toplevel Struts "portal" will be kept in a "site" subproject.
     The portal links "down" to each subproject site for details. 
-->


<!-- Output directory name for all files generated by the build process -->
<property name="build.home" value="${basedir}/target"/>

<!-- Doc directory -->
<property name="doc.dir" value="doc"/>


<target name="clean.website" depends="clean,compile.website"/>

<target name="clean" description="Clean build and distribution directories">
  <delete dir="${build.home}"/>
</target>


<target name="compile.website" depends="compile.docs" description="Compile main website"/>

<!--
        The "validate.docs" target validates the generated XHTML 
        documentation against the DTDs
-->
<target name="validate.docs" description="Validate generated XHTML documents">
    <xmlvalidate warn="yes" failonerror="yes" lenient="no">
       <fileset dir="${build.home}/documentation">
        <include name="**/*.html"/>
        <exclude name="api/**"/>
      </fileset>
       
      <!-- Reference local DTDS to avoid network lookup -->
      <dtd publicId="-//W3C//DTD XHTML 1.0 Strict//EN"
       location="${doc.dir}/dtds/xhtml1-strict.dtd"/>
      <dtd publicId="-//W3C//DTD XHTML 1.0 Transitional//EN"
       location="${doc.dir}/dtds/xhtml1-transitional.dtd"/>

   </xmlvalidate>
</target>


<!-- "compile.docs" transforms the documentation using XSLT -->
<target name="compile.docs" description="Perform XSLT transformations">
    <!-- Create the taglib documentation -->
    <style   basedir="${doc.dir}" destdir="${build.home}/documentation"
           extension=".html" style="${doc.dir}/stylesheets/struts.xsl"
            includes="*.xml"
            excludes="project.xml"
            reloadstylesheet="true">
      <param name="relative-path" expression="."/>
    </style>            
    <!-- Create the FAQs -->
    <style   basedir="${doc.dir}/faqs"
             destdir="${build.home}/documentation/faqs"
           extension=".html" style="${doc.dir}/stylesheets/struts.xsl"
            includes="*.xml"
            excludes="project.xml"
            reloadstylesheet="true">
      <param name="project-path" expression="../faqs/project.xml"/>
    </style>            
    <!-- Create the proposals -->
    <style   basedir="${doc.dir}/proposals"
             destdir="${build.home}/documentation/proposals"
           extension=".html" style="${doc.dir}/stylesheets/struts.xsl"
            includes="*.xml"
            excludes="project.xml"
            reloadstylesheet="true">
      <param name="project-path" expression="../proposals/project.xml"/>
    </style>            
    <!-- Create the user guide -->
    <style   basedir="${doc.dir}/userGuide"
             destdir="${build.home}/documentation/userGuide"
           extension=".html" style="${doc.dir}/stylesheets/struts.xsl"
            includes="*.xml"
            excludes="project.xml"
            reloadstylesheet="true">
      <param name="project-path" expression="../userGuide/project.xml"/>
    </style>  

    <!-- Copy the basic documentation files -->
    <copy      todir="${build.home}/documentation">
      <fileset   dir="${doc.dir}">
        <include name="**/*.css"/>
        <include name="**/*.gif"/>
        <include name="**/*.html"/>
        <include name="**/*.jpg"/>
        <include name="**/*.js"/>
      </fileset>
    </copy>
    <!-- Copy the basic user guide files -->
    <copy      todir="${build.home}/documentation/userGuide">
      <fileset   dir="${doc.dir}/userGuide">
        <include name="**/*.css"/>
        <include name="**/*.gif"/>
        <include name="**/*.html"/>
        <include name="**/*.jpg"/>
        <include name="**/*.js"/>
      </fileset>
    </copy>
    <!-- Copy the proposal files -->
    <copy      todir="${build.home}/documentation/proposals">
      <fileset   dir="${doc.dir}/proposals">
        <include name="**/*.css"/>
        <include name="**/*.gif"/>
        <include name="**/*.html"/>
        <include name="**/*.jpg"/>
        <include name="**/*.js"/>
      </fileset>
    </copy>
    <!-- Copy the FAQ files -->
    <copy      todir="${build.home}/documentation/faqs">
      <fileset   dir="${doc.dir}/faqs">
        <include name="**/*.zip"/>
      </fileset>
    </copy>

</target>


</project>
