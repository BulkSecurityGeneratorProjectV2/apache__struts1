<?xml version="1.0" encoding="UTF-8"?>
<document url="extensions.html"><!--
    WARNING: This file is automatically generated from an xdoclet extension that
    turns javadoc tags in the extensions Java source code into an xml file,
    which is then processed by an xsl file to create this document. Do not
    modify this file, but rather either modify the comments or xsl file.
  --><properties><title>Java API Extensions</title></properties><body><section href="summary" name="Java API Extensions"><p>
        Struts Flow adds properties and methods to Java API classes to make using the Java API easier in the flow scripts.  Each documented extension listed here includes a description and example of its use.
      </p><strong>java.io.InputStream</strong><blockquote><table><tr><td>String</td><td><a href="#java.io.InputStream_getText">getText</a>() - 
                Gets the contents of the stream as a String.</td></tr></table></blockquote><strong>java.util.Collection</strong><blockquote><table><tr><td>void</td><td><a href="#java.util.Collection_each">each</a>(Function func) - 
                Iterates through the collection and for each element, calls the passed function with the element as the parameter.</td></tr><tr><td>Object</td><td><a href="#java.util.Collection_find">find</a>(Function func) - 
                Finds the first item selected by the passed function.</td></tr><tr><td>java.util.List</td><td><a href="#java.util.Collection_findAll">findAll</a>(Function func) - 
                Finds all items selected by the passed function.</td></tr></table></blockquote><strong>java.util.List</strong><blockquote><table><tr><td>java.util.List</td><td><a href="#java.util.List_asImmutable">asImmutable</a>() - 
                Returns an immutable version of this list.</td></tr><tr><td>java.util.List</td><td><a href="#java.util.List_asSynchronized">asSynchronized</a>() - 
                Returns a synchronized version of this list.</td></tr><tr><td>Object</td><td><a href="#java.util.List_pop">pop</a>() - 
                Pops the last item off the list.</td></tr><tr><td>java.util.List</td><td><a href="#java.util.List_sort">sort</a>() - 
                Sorts the list according to the natural order.</td></tr><tr><td>java.util.List</td><td><a href="#java.util.List_sortEach">sortEach</a>(Function func) - 
                Sorts the list using the passed function to determine order.</td></tr></table></blockquote><strong>java.io.File</strong><blockquote><table><tr><td>java.io.File</td><td><a href="#java.io.File_append">append</a>(String text) - 
                Appends text to the file.</td></tr><tr><td>String</td><td><a href="#java.io.File_getText">getText</a>() - 
                Gets the contents of the file as a String.</td></tr><tr><td>void</td><td><a href="#java.io.File_eachLine">eachLine</a>(Function func) - 
                Passes each line to the provided function.</td></tr><tr><td>String[]</td><td><a href="#java.io.File_getLines">getLines</a>() - 
                Collects the contents of the file as an array of lines.</td></tr><tr><td>boolean</td><td><a href="#java.io.File_remove">remove</a>() - 
                Removes a file.</td></tr></table></blockquote></section><section href="cls_java.io.InputStream" name="java.io.InputStream"><section href="java.io.InputStream_getText" name="getText"><pre>String getText()</pre><blockquote><p>Gets the contents of the stream as a String.</p><dl><dt><strong>Example:</strong></dt><dd><code>text = inStream.getText()</code></dd></dl></blockquote></section></section><section href="cls_java.util.Collection" name="java.util.Collection"><section href="java.util.Collection_each" name="each"><pre>void each(Function func)</pre><blockquote><p>Iterates through the collection and for each element, calls the passed function with the element as the parameter.</p><dl><dt><strong>Example:</strong></dt><dd><code>list.each(function(item) { print(item) })</code></dd></dl></blockquote></section><section href="java.util.Collection_find" name="find"><pre>Object find(Function func)</pre><blockquote><p>Finds the first item selected by the passed function. The function will receive the item and should return true or false for the result.</p><dl><dt><strong>Example:</strong></dt><dd><code>item = list.find(function(item) { return item.matches(/foo[0-9]/) })</code></dd></dl></blockquote></section><section href="java.util.Collection_findAll" name="findAll"><pre>java.util.List findAll(Function func)</pre><blockquote><p>Finds all items selected by the passed function. The function will receive the item and should return true or false for the result. A list of all matches will be returned.</p><dl><dt><strong>Example:</strong></dt><dd><code>matches = list.findAll(function(item) { return item.matches(/foo[0-9]/) })</code></dd></dl></blockquote></section></section><section href="cls_java.util.List" name="java.util.List"><section href="java.util.List_asImmutable" name="asImmutable"><pre>java.util.List asImmutable()</pre><blockquote><p>Returns an immutable version of this list.</p><dl><dt><strong>Example:</strong></dt><dd><code>frozenList = list.asImmutable()</code></dd></dl></blockquote></section><section href="java.util.List_asSynchronized" name="asSynchronized"><pre>java.util.List asSynchronized()</pre><blockquote><p>Returns a synchronized version of this list.</p><dl><dt><strong>Example:</strong></dt><dd><code>multiThreadList = list.asSynchronized()</code></dd></dl></blockquote></section><section href="java.util.List_pop" name="pop"><pre>Object pop()</pre><blockquote><p>Pops the last item off the list. The last item will be returned and removed from the list.</p><dl><dt><strong>Example:</strong></dt><dd><code>lastItem = list.pop()</code></dd></dl></blockquote></section><section href="java.util.List_sort" name="sort"><pre>java.util.List sort()</pre><blockquote><p>Sorts the list according to the natural order.</p><dl><dt><strong>Example:</strong></dt><dd><code>sortedList = list.sort()</code></dd></dl></blockquote></section><section href="java.util.List_sortEach" name="sortEach"><pre>java.util.List sortEach(Function func)</pre><blockquote><p>Sorts the list using the passed function to determine order. The function will receive two parameters, and should return &gt; 0 if the first is greater, &lt; 0 if the first is less, and 0 if equal.</p><dl><dt><strong>Example:</strong></dt><dd><code>sortedList = list.sort(function(val1, val2) { return val1.compareTo(val2) })</code></dd></dl></blockquote></section></section><section href="cls_java.io.File" name="java.io.File"><section href="java.io.File_append" name="append"><pre>java.io.File append(String text)</pre><blockquote><p>Appends text to the file.</p><dl><dt><strong>Example:</strong></dt><dd><code>file.append("added text")</code></dd></dl></blockquote></section><section href="java.io.File_getText" name="getText"><pre>String getText()</pre><blockquote><p>Gets the contents of the file as a String.</p><dl><dt><strong>Example:</strong></dt><dd><code>text = file.getText()</code></dd></dl></blockquote></section><section href="java.io.File_eachLine" name="eachLine"><pre>void eachLine(Function func)</pre><blockquote><p>Passes each line to the provided function. The file is opened, and interpreted as a text file using the default encoding. Each line is read and passed to the provided function.</p><dl><dt><strong>Example:</strong></dt><dd><code>file.eachLine(function(line) { print(line) })</code></dd></dl></blockquote></section><section href="java.io.File_getLines" name="getLines"><pre>String[] getLines()</pre><blockquote><p>Collects the contents of the file as an array of lines. The file is opened, and interpreted as a text file using the default encoding.</p><dl><dt><strong>Example:</strong></dt><dd><code>linesArray = file.getLines()</code></dd></dl></blockquote></section><section href="java.io.File_remove" name="remove"><pre>boolean remove()</pre><blockquote><p>Removes a file. Used to get around the problem of the reserved word 'delete'.</p><dl><dt><strong>Example:</strong></dt><dd><code>isRemoved = file.remove()</code></dd></dl></blockquote></section></section></body></document>