# -----------------------------------------------------------------------------
# WARNING: THIS FILE IS INCOMPLETE -- THE OPTIONAL "APACHE.HOME" REFERENCES 
# AND "JSTL.HOME" REFERENCES NEED TO BE RESOLVED. OTHER REFERENCES TO "/opt"
# ALSO NEED TO POINT TO THE MAVEN REPOSITORY EQUIVALENTS.
# -----------------------------------------------------------------------------
# build.properties.sample.maven
#
# This is a simplified build.properties file that assumes you are using the 
# Maven build file to aquire the JARs, but still need to use the Ant build to 
# generate the documentation and such. 
#
# $Id: $
# -----------------------------------------------------------------------------

# THIS IS THE ONLY REFERENCE YOU NEED TO SET (when the file is complete)

maven.repo = /Documents and Settings/${username}/.maven/repository

# -----------------------------------------

compile.deprecation=true

# servlet.home - Where JAR file containing the Servlet API classes is kept
servlet.jar=${maven.repo}/servletapi/jars/servletapi-2.3.jar


# -- required for "contrib" -----------------

# jstl.home - Where the JSTL distribution is kept
jstl.home = /opt/Taglibs/jakarta-taglibs-standard-1.0.5

# struts.home
struts.home = ../../


# -- required for testing -----------------

junit.home = /opt/JUnit
# JUnit jar file, version 3.81 required
junit.jar = ${maven.repo}/junit/jars/junit-3.8.1.jar

# apache.home - Where other precompiled jar files from Apache are kept
# This may (optionally) include Ant, Cactus,Tomcat, and Xerces
apache.home=/opt/Apache


# -- used by other optional tasks-----------

# The JAR file containing the Checkstyle package version 2.4, if available. If
# you do not have Checkstyle installed, do not set this property.
# checkstyle.jar = /opt/CheckStyle/checkstyle-2.4/checkstyle-all-2.4.jar

# The Directory containing the PMD package distribution, 1.2.1, if available. If
# you do not have PMD installed, do not set this property.
# pmd.home = /opt/pmd/pmd-1.2.1


# Properties related to Struts "shared"
# -----------------------------------------

# For more about these dependencies, see the installation page in the UserGuide
antlr.jar=${maven.repo}/antlr/jars/antlr-2.7.2.jar
commons-beanutils.jar=${maven.repo}/commons-beanutils/jars/commons-beanutils-1.7.0.jar
commons-chain.jar=${maven.repo}/commons-chain/jars/commons-chain-1.0.jar
commons-collections.jar=${maven.repo}/commons-collections/jars/commons-collections-3.1.jar
commons-digester.jar=${maven.repo}/commons-digester/jars/commons-digester-1.6.jar
commons-fileupload.jar=${maven.repo}/commons-fileupload/jars/commons-fileupload-1.0.jar
commons-logging.jar=${maven.repo}/commons-logging/jars/commons-logging-1.0.3.jar
commons-validator.jar=${maven.repo}/commons-validator/jars/commons-validator-1.1.3.jar
jakarta-oro.jar=${maven.repo}/oro/jars/oro-2.0.7.jar


# Properties related to Struts "contrib"
# -----------------------------------------

# These links to the JSTL jar files are only required for building the
# Struts-EL contrib library.  If they are not present, it will not build that
# contrib library (although it doesn't prevent you from building it directly in
# "contrib/struts-el".

jstl.jar =${jstl.home}/lib/jstl.jar
jstl-standard.jar=${jstl.home}/lib/standard.jar
jstl.tld.dir     =${jstl.home}/tld


# Properties related to Struts unit testing
# -----------------------------------------

# Choose your Cactus!
# (Uncomment only one set of properties)
#
# In order for the Cactus tests to work, you must have a copy of
# junit.jar in ANT_HOME/lib (See Ant docs on JUnit task)
#
# -- Cactus 13-1.3 home -------------------
#cactus.home=${apache.home}/jakarta-cactus-13-1.3
#cactus.lib=${cactus.home}/lib

# JUnit jar file, version 3.81 or newer required.
# if you uncomment this, comment the one above
#junit.jar = ${cactus.lib}/junit.jar

# -- Cactus 13-1.4 home -------------------
#cactus.home=${apache.home}/jakarta-cactus-13-1.4
#cactus.lib=${cactus.home}/lib

# -- Cactus 13-1.4.1 home  ----------------
cactus.home=${apache.home}/jakarta-cactus-13-1.4.1
cactus.lib=${cactus.home}/lib

# -- Shared Cactus settings ----------------
# Scheme used to run tests for cactus, http, https.
cactus.contextScheme = http
# Host used to run tests for cactus, localhost.
cactus.contextHost = localhost
# Port used to run tests for cactus, change to non standard port
# if container is already running on that port.
cactus.contextPort = 8080
# Application(context) used to run tests for cactus.
cactus.contextApp = test

# Ant Optional Jars for Junit task
ant.optional.jar = ${apache.home}/apache-ant-1.5.3-1/lib/optional.jar

# Ant Jar for optional taglib documentation task
ant.jar=${maven.repos}/ant/jars/apache-ant-1.5.3-1.jar

# Servlet engine locations for the tests

# Note: If you don't want to run the test on a given servlet engine, just
#       comment it's home property. For example, if you don't want to run the
#       tests on Tomcat 4.1, comment the "tomcat.home.41" property.

tomcat.home.41 = ${apache.home}/jakarta-tomcat-4.1.30
tomcat.home.50 = ${apache.home}/jakarta-tomcat-5.0.28
tomcat.home.55 = ${apache.home}/jakarta-tomcat-5.5.4
# use value of tomcat.home.41 to set equivalent property for Maven-Cactus plug-in
cactus.home.tomcat4x=${tomcat.home.41}


# Properties related to optional Tomcat tasks
# ------------------------------------

# The directory containing your binary distribution of Tomcat 4.1 ("Catalina"
# is the servlet container part of this distribution), from CVS module
# "jakarta-tomcat-4.1" at jakarta.apache.org).  This is only required
# if you are going to execute the "deploy.catalina" target.
catalina.home=${tomcat.home.41}

# The JAR file containing the JSP API classes to compile against if you are
# using JSP 2.0 or later (where these classes are separated from servlet.jar).
# If you are using JSP 1.1 or 1.2, leave this property unset
#jsp.jar=${apache.home}/jakarta-servletapi/lib/jsp.jar

# The directory containing your binary distribution of Tomcat 4.1, from CVS
# module "jakarta-tomcat-4.0" at jakarta.apache.org. This is only required
# if you are going to execute the "deploy.tomcat" target.
tomcat.home=${apache.home}/jakarta-tomcat-4.1.30

# The JAR file containing the Xerces parser.  This is only required if you are
# going to execute the "deploy.catalina" target.
xerces.jar=${maven.repos}/xerces/jars/xerces-2.4.0.jar


### end
